//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.08.20 at 09:11:46 AM EEST 
//


package fi.vm.yti.terminology.api.model.ntrf;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the fi.vm.yti.terminology.api.model.ntrf package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _VOCABULARY_QNAME = new QName("", "VOCABULARY");
    private final static QName _DIAGTypeNCON_QNAME = new QName("", "NCON");
    private final static QName _DIAGTypeCLAS_QNAME = new QName("", "CLAS");
    private final static QName _DIAGTypeRCON_QNAME = new QName("", "RCON");
    private final static QName _DIAGTypeLINK_QNAME = new QName("", "LINK");
    private final static QName _DIAGTypeCHECK_QNAME = new QName("", "CHECK");
    private final static QName _DIAGTypeLANG_QNAME = new QName("", "LANG");
    private final static QName _DIAGTypeECON_QNAME = new QName("", "ECON");
    private final static QName _DIAGTypeSUBJ_QNAME = new QName("", "SUBJ");
    private final static QName _DIAGTypeCRDAT_QNAME = new QName("", "CRDAT");
    private final static QName _DIAGTypeBCON_QNAME = new QName("", "BCON");
    private final static QName _NOTETypeSOURFHOGR_QNAME = new QName("", "HOGR");
    private final static QName _SYTypeTERMGRAM_QNAME = new QName("", "GRAM");
    private final static QName _PICTTypeILLT_QNAME = new QName("", "ILLT");
    private final static QName _NOTETypeI_QNAME = new QName("", "I");
    private final static QName _NOTETypeSOURF_QNAME = new QName("", "SOURF");
    private final static QName _DTEBTypeEQUI_QNAME = new QName("", "EQUI");
    private final static QName _DTEBTypeADD_QNAME = new QName("", "ADD");
    private final static QName _DTEBTypeSCOPE_QNAME = new QName("", "SCOPE");
    private final static QName _DTEBTypeGEOG_QNAME = new QName("", "GEOG");
    private final static QName _DTEBTypeTERM_QNAME = new QName("", "TERM");
    private final static QName _REFTEXTTypeB_QNAME = new QName("", "B");
    private final static QName _REFTypeREFNAME_QNAME = new QName("", "REFNAME");
    private final static QName _REFTypeREFLINK_QNAME = new QName("", "REFLINK");
    private final static QName _REFTypeREFTEXT_QNAME = new QName("", "REFTEXT");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: fi.vm.yti.terminology.api.model.ntrf
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link NOTEType }
     * 
     */
    public NOTEType createNOTEType() {
        return new NOTEType();
    }

    /**
     * Create an instance of {@link REFType }
     * 
     */
    public REFType createREFType() {
        return new REFType();
    }

    /**
     * Create an instance of {@link SYType }
     * 
     */
    public SYType createSYType() {
        return new SYType();
    }

    /**
     * Create an instance of {@link DTEBType }
     * 
     */
    public DTEBType createDTEBType() {
        return new DTEBType();
    }

    /**
     * Create an instance of {@link DEFType }
     * 
     */
    public DEFType createDEFType() {
        return new DEFType();
    }

    /**
     * Create an instance of {@link DTEAType }
     * 
     */
    public DTEAType createDTEAType() {
        return new DTEAType();
    }

    /**
     * Create an instance of {@link REFERENCESType }
     * 
     */
    public REFERENCESType createREFERENCESType() {
        return new REFERENCESType();
    }

    /**
     * Create an instance of {@link REFERENCESType.REFHEAD }
     * 
     */
    public REFERENCESType.REFHEAD createREFERENCESTypeREFHEAD() {
        return new REFERENCESType.REFHEAD();
    }

    /**
     * Create an instance of {@link TEType }
     * 
     */
    public TEType createTEType() {
        return new TEType();
    }

    /**
     * Create an instance of {@link VOCABULARYType }
     * 
     */
    public VOCABULARYType createVOCABULARYType() {
        return new VOCABULARYType();
    }

    /**
     * Create an instance of {@link TERMType }
     * 
     */
    public TERMType createTERMType() {
        return new TERMType();
    }

    /**
     * Create an instance of {@link INDEXType }
     * 
     */
    public INDEXType createINDEXType() {
        return new INDEXType();
    }

    /**
     * Create an instance of {@link HEADType }
     * 
     */
    public HEADType createHEADType() {
        return new HEADType();
    }

    /**
     * Create an instance of {@link RCONType }
     * 
     */
    public RCONType createRCONType() {
        return new RCONType();
    }

    /**
     * Create an instance of {@link FINANCIERSType }
     * 
     */
    public FINANCIERSType createFINANCIERSType() {
        return new FINANCIERSType();
    }

    /**
     * Create an instance of {@link EQUIType }
     * 
     */
    public EQUIType createEQUIType() {
        return new EQUIType();
    }

    /**
     * Create an instance of {@link REFTEXTType }
     * 
     */
    public REFTEXTType createREFTEXTType() {
        return new REFTEXTType();
    }

    /**
     * Create an instance of {@link ASTEType }
     * 
     */
    public ASTEType createASTEType() {
        return new ASTEType();
    }

    /**
     * Create an instance of {@link ECONType }
     * 
     */
    public ECONType createECONType() {
        return new ECONType();
    }

    /**
     * Create an instance of {@link TITLESType }
     * 
     */
    public TITLESType createTITLESType() {
        return new TITLESType();
    }

    /**
     * Create an instance of {@link FOREWORDType }
     * 
     */
    public FOREWORDType createFOREWORDType() {
        return new FOREWORDType();
    }

    /**
     * Create an instance of {@link PICTType }
     * 
     */
    public PICTType createPICTType() {
        return new PICTType();
    }

    /**
     * Create an instance of {@link HLANGType }
     * 
     */
    public HLANGType createHLANGType() {
        return new HLANGType();
    }

    /**
     * Create an instance of {@link WORKGROUPType }
     * 
     */
    public WORKGROUPType createWORKGROUPType() {
        return new WORKGROUPType();
    }

    /**
     * Create an instance of {@link COMMENTSType }
     * 
     */
    public COMMENTSType createCOMMENTSType() {
        return new COMMENTSType();
    }

    /**
     * Create an instance of {@link BCONType }
     * 
     */
    public BCONType createBCONType() {
        return new BCONType();
    }

    /**
     * Create an instance of {@link RECORDType }
     * 
     */
    public RECORDType createRECORDType() {
        return new RECORDType();
    }

    /**
     * Create an instance of {@link SCOPEType }
     * 
     */
    public SCOPEType createSCOPEType() {
        return new SCOPEType();
    }

    /**
     * Create an instance of {@link STEType }
     * 
     */
    public STEType createSTEType() {
        return new STEType();
    }

    /**
     * Create an instance of {@link HEADERType }
     * 
     */
    public HEADERType createHEADERType() {
        return new HEADERType();
    }

    /**
     * Create an instance of {@link LANGType }
     * 
     */
    public LANGType createLANGType() {
        return new LANGType();
    }

    /**
     * Create an instance of {@link NCONType }
     * 
     */
    public NCONType createNCONType() {
        return new NCONType();
    }

    /**
     * Create an instance of {@link GRAMType }
     * 
     */
    public GRAMType createGRAMType() {
        return new GRAMType();
    }

    /**
     * Create an instance of {@link LINKType }
     * 
     */
    public LINKType createLINKType() {
        return new LINKType();
    }

    /**
     * Create an instance of {@link DIAGType }
     * 
     */
    public DIAGType createDIAGType() {
        return new DIAGType();
    }

    /**
     * Create an instance of {@link MEMBERType }
     * 
     */
    public MEMBERType createMEMBERType() {
        return new MEMBERType();
    }

    /**
     * Create an instance of {@link NOTEType.SOURF }
     * 
     */
    public NOTEType.SOURF createNOTETypeSOURF() {
        return new NOTEType.SOURF();
    }

    /**
     * Create an instance of {@link NOTEType.HOGR }
     * 
     */
    public NOTEType.HOGR createNOTETypeHOGR() {
        return new NOTEType.HOGR();
    }

    /**
     * Create an instance of {@link REFType.REFTEXT }
     * 
     */
    public REFType.REFTEXT createREFTypeREFTEXT() {
        return new REFType.REFTEXT();
    }

    /**
     * Create an instance of {@link SYType.TERM }
     * 
     */
    public SYType.TERM createSYTypeTERM() {
        return new SYType.TERM();
    }

    /**
     * Create an instance of {@link DTEBType.TERM }
     * 
     */
    public DTEBType.TERM createDTEBTypeTERM() {
        return new DTEBType.TERM();
    }

    /**
     * Create an instance of {@link DTEBType.SCOPE }
     * 
     */
    public DTEBType.SCOPE createDTEBTypeSCOPE() {
        return new DTEBType.SCOPE();
    }

    /**
     * Create an instance of {@link DEFType.SOURF }
     * 
     */
    public DEFType.SOURF createDEFTypeSOURF() {
        return new DEFType.SOURF();
    }

    /**
     * Create an instance of {@link DTEAType.TERM }
     * 
     */
    public DTEAType.TERM createDTEATypeTERM() {
        return new DTEAType.TERM();
    }

    /**
     * Create an instance of {@link REFERENCESType.REFHEAD.REFTEXT }
     * 
     */
    public REFERENCESType.REFHEAD.REFTEXT createREFERENCESTypeREFHEADREFTEXT() {
        return new REFERENCESType.REFHEAD.REFTEXT();
    }

    /**
     * Create an instance of {@link TEType.TERM }
     * 
     */
    public TEType.TERM createTETypeTERM() {
        return new TEType.TERM();
    }

    /**
     * Create an instance of {@link TEType.SCOPE }
     * 
     */
    public TEType.SCOPE createTETypeSCOPE() {
        return new TEType.SCOPE();
    }

    /**
     * Create an instance of {@link VOCABULARYType.P }
     * 
     */
    public VOCABULARYType.P createVOCABULARYTypeP() {
        return new VOCABULARYType.P();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VOCABULARYType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "VOCABULARY")
    public JAXBElement<VOCABULARYType> createVOCABULARY(VOCABULARYType value) {
        return new JAXBElement<VOCABULARYType>(_VOCABULARY_QNAME, VOCABULARYType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "NCON", scope = DIAGType.class)
    public JAXBElement<NCONType> createDIAGTypeNCON(NCONType value) {
        return new JAXBElement<NCONType>(_DIAGTypeNCON_QNAME, NCONType.class, DIAGType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CLAS", scope = DIAGType.class)
    public JAXBElement<String> createDIAGTypeCLAS(String value) {
        return new JAXBElement<String>(_DIAGTypeCLAS_QNAME, String.class, DIAGType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "RCON", scope = DIAGType.class)
    public JAXBElement<RCONType> createDIAGTypeRCON(RCONType value) {
        return new JAXBElement<RCONType>(_DIAGTypeRCON_QNAME, RCONType.class, DIAGType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LINKType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LINK", scope = DIAGType.class)
    public JAXBElement<LINKType> createDIAGTypeLINK(LINKType value) {
        return new JAXBElement<LINKType>(_DIAGTypeLINK_QNAME, LINKType.class, DIAGType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CHECK", scope = DIAGType.class)
    public JAXBElement<String> createDIAGTypeCHECK(String value) {
        return new JAXBElement<String>(_DIAGTypeCHECK_QNAME, String.class, DIAGType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LANGType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LANG", scope = DIAGType.class)
    public JAXBElement<LANGType> createDIAGTypeLANG(LANGType value) {
        return new JAXBElement<LANGType>(_DIAGTypeLANG_QNAME, LANGType.class, DIAGType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ECONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ECON", scope = DIAGType.class)
    public JAXBElement<ECONType> createDIAGTypeECON(ECONType value) {
        return new JAXBElement<ECONType>(_DIAGTypeECON_QNAME, ECONType.class, DIAGType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SUBJ", scope = DIAGType.class)
    public JAXBElement<String> createDIAGTypeSUBJ(String value) {
        return new JAXBElement<String>(_DIAGTypeSUBJ_QNAME, String.class, DIAGType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CRDAT", scope = DIAGType.class)
    public JAXBElement<String> createDIAGTypeCRDAT(String value) {
        return new JAXBElement<String>(_DIAGTypeCRDAT_QNAME, String.class, DIAGType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BCON", scope = DIAGType.class)
    public JAXBElement<BCONType> createDIAGTypeBCON(BCONType value) {
        return new JAXBElement<BCONType>(_DIAGTypeBCON_QNAME, BCONType.class, DIAGType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Byte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HOGR", scope = NOTEType.SOURF.class)
    public JAXBElement<Byte> createNOTETypeSOURFHOGR(Byte value) {
        return new JAXBElement<Byte>(_NOTETypeSOURFHOGR_QNAME, Byte.class, NOTEType.SOURF.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GRAMType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "GRAM", scope = SYType.TERM.class)
    public JAXBElement<GRAMType> createSYTypeTERMGRAM(GRAMType value) {
        return new JAXBElement<GRAMType>(_SYTypeTERMGRAM_QNAME, GRAMType.class, SYType.TERM.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "NCON", scope = PICTType.class)
    public JAXBElement<NCONType> createPICTTypeNCON(NCONType value) {
        return new JAXBElement<NCONType>(_DIAGTypeNCON_QNAME, NCONType.class, PICTType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CLAS", scope = PICTType.class)
    public JAXBElement<String> createPICTTypeCLAS(String value) {
        return new JAXBElement<String>(_DIAGTypeCLAS_QNAME, String.class, PICTType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "RCON", scope = PICTType.class)
    public JAXBElement<RCONType> createPICTTypeRCON(RCONType value) {
        return new JAXBElement<RCONType>(_DIAGTypeRCON_QNAME, RCONType.class, PICTType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ILLT", scope = PICTType.class)
    public JAXBElement<String> createPICTTypeILLT(String value) {
        return new JAXBElement<String>(_PICTTypeILLT_QNAME, String.class, PICTType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CHECK", scope = PICTType.class)
    public JAXBElement<String> createPICTTypeCHECK(String value) {
        return new JAXBElement<String>(_DIAGTypeCHECK_QNAME, String.class, PICTType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LINKType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LINK", scope = PICTType.class)
    public JAXBElement<LINKType> createPICTTypeLINK(LINKType value) {
        return new JAXBElement<LINKType>(_DIAGTypeLINK_QNAME, LINKType.class, PICTType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LANGType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LANG", scope = PICTType.class)
    public JAXBElement<LANGType> createPICTTypeLANG(LANGType value) {
        return new JAXBElement<LANGType>(_DIAGTypeLANG_QNAME, LANGType.class, PICTType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ECONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ECON", scope = PICTType.class)
    public JAXBElement<ECONType> createPICTTypeECON(ECONType value) {
        return new JAXBElement<ECONType>(_DIAGTypeECON_QNAME, ECONType.class, PICTType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SUBJ", scope = PICTType.class)
    public JAXBElement<String> createPICTTypeSUBJ(String value) {
        return new JAXBElement<String>(_DIAGTypeSUBJ_QNAME, String.class, PICTType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CRDAT", scope = PICTType.class)
    public JAXBElement<String> createPICTTypeCRDAT(String value) {
        return new JAXBElement<String>(_DIAGTypeCRDAT_QNAME, String.class, PICTType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BCON", scope = PICTType.class)
    public JAXBElement<BCONType> createPICTTypeBCON(BCONType value) {
        return new JAXBElement<BCONType>(_DIAGTypeBCON_QNAME, BCONType.class, PICTType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Byte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HOGR", scope = BCONType.class)
    public JAXBElement<Byte> createBCONTypeHOGR(Byte value) {
        return new JAXBElement<Byte>(_NOTETypeSOURFHOGR_QNAME, Byte.class, BCONType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "NCON", scope = NOTEType.class)
    public JAXBElement<NCONType> createNOTETypeNCON(NCONType value) {
        return new JAXBElement<NCONType>(_DIAGTypeNCON_QNAME, NCONType.class, NOTEType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NOTEType.HOGR }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HOGR", scope = NOTEType.class)
    public JAXBElement<NOTEType.HOGR> createNOTETypeHOGR(NOTEType.HOGR value) {
        return new JAXBElement<NOTEType.HOGR>(_NOTETypeSOURFHOGR_QNAME, NOTEType.HOGR.class, NOTEType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "RCON", scope = NOTEType.class)
    public JAXBElement<RCONType> createNOTETypeRCON(RCONType value) {
        return new JAXBElement<RCONType>(_DIAGTypeRCON_QNAME, RCONType.class, NOTEType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LINKType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LINK", scope = NOTEType.class)
    public JAXBElement<LINKType> createNOTETypeLINK(LINKType value) {
        return new JAXBElement<LINKType>(_DIAGTypeLINK_QNAME, LINKType.class, NOTEType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "I", scope = NOTEType.class)
    public JAXBElement<String> createNOTETypeI(String value) {
        return new JAXBElement<String>(_NOTETypeI_QNAME, String.class, NOTEType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NOTEType.SOURF }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SOURF", scope = NOTEType.class)
    public JAXBElement<NOTEType.SOURF> createNOTETypeSOURF(NOTEType.SOURF value) {
        return new JAXBElement<NOTEType.SOURF>(_NOTETypeSOURF_QNAME, NOTEType.SOURF.class, NOTEType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BCON", scope = NOTEType.class)
    public JAXBElement<BCONType> createNOTETypeBCON(BCONType value) {
        return new JAXBElement<BCONType>(_DIAGTypeBCON_QNAME, BCONType.class, NOTEType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EQUIType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "EQUI", scope = DTEBType.class)
    public JAXBElement<EQUIType> createDTEBTypeEQUI(EQUIType value) {
        return new JAXBElement<EQUIType>(_DTEBTypeEQUI_QNAME, EQUIType.class, DTEBType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ADD", scope = DTEBType.class)
    public JAXBElement<String> createDTEBTypeADD(String value) {
        return new JAXBElement<String>(_DTEBTypeADD_QNAME, String.class, DTEBType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Byte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HOGR", scope = DTEBType.class)
    public JAXBElement<Byte> createDTEBTypeHOGR(Byte value) {
        return new JAXBElement<Byte>(_NOTETypeSOURFHOGR_QNAME, Byte.class, DTEBType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DTEBType.SCOPE }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SCOPE", scope = DTEBType.class)
    public JAXBElement<DTEBType.SCOPE> createDTEBTypeSCOPE(DTEBType.SCOPE value) {
        return new JAXBElement<DTEBType.SCOPE>(_DTEBTypeSCOPE_QNAME, DTEBType.SCOPE.class, DTEBType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "GEOG", scope = DTEBType.class)
    public JAXBElement<String> createDTEBTypeGEOG(String value) {
        return new JAXBElement<String>(_DTEBTypeGEOG_QNAME, String.class, DTEBType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DTEBType.TERM }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TERM", scope = DTEBType.class)
    public JAXBElement<DTEBType.TERM> createDTEBTypeTERM(DTEBType.TERM value) {
        return new JAXBElement<DTEBType.TERM>(_DTEBTypeTERM_QNAME, DTEBType.TERM.class, DTEBType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SOURF", scope = DTEBType.class)
    public JAXBElement<String> createDTEBTypeSOURF(String value) {
        return new JAXBElement<String>(_NOTETypeSOURF_QNAME, String.class, DTEBType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "NCON", scope = DEFType.class)
    public JAXBElement<NCONType> createDEFTypeNCON(NCONType value) {
        return new JAXBElement<NCONType>(_DIAGTypeNCON_QNAME, NCONType.class, DEFType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Byte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HOGR", scope = DEFType.class)
    public JAXBElement<Byte> createDEFTypeHOGR(Byte value) {
        return new JAXBElement<Byte>(_NOTETypeSOURFHOGR_QNAME, Byte.class, DEFType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "RCON", scope = DEFType.class)
    public JAXBElement<RCONType> createDEFTypeRCON(RCONType value) {
        return new JAXBElement<RCONType>(_DIAGTypeRCON_QNAME, RCONType.class, DEFType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LINKType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LINK", scope = DEFType.class)
    public JAXBElement<LINKType> createDEFTypeLINK(LINKType value) {
        return new JAXBElement<LINKType>(_DIAGTypeLINK_QNAME, LINKType.class, DEFType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DEFType.SOURF }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SOURF", scope = DEFType.class)
    public JAXBElement<DEFType.SOURF> createDEFTypeSOURF(DEFType.SOURF value) {
        return new JAXBElement<DEFType.SOURF>(_NOTETypeSOURF_QNAME, DEFType.SOURF.class, DEFType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BCON", scope = DEFType.class)
    public JAXBElement<BCONType> createDEFTypeBCON(BCONType value) {
        return new JAXBElement<BCONType>(_DIAGTypeBCON_QNAME, BCONType.class, DEFType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "B", scope = REFTEXTType.class)
    public JAXBElement<String> createREFTEXTTypeB(String value) {
        return new JAXBElement<String>(_REFTEXTTypeB_QNAME, String.class, REFTEXTType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GRAMType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "GRAM", scope = DTEBType.TERM.class)
    public JAXBElement<GRAMType> createDTEBTypeTERMGRAM(GRAMType value) {
        return new JAXBElement<GRAMType>(_SYTypeTERMGRAM_QNAME, GRAMType.class, DTEBType.TERM.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "REFNAME", scope = REFType.class)
    public JAXBElement<String> createREFTypeREFNAME(String value) {
        return new JAXBElement<String>(_REFTypeREFNAME_QNAME, String.class, REFType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "REFLINK", scope = REFType.class)
    public JAXBElement<String> createREFTypeREFLINK(String value) {
        return new JAXBElement<String>(_REFTypeREFLINK_QNAME, String.class, REFType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link REFType.REFTEXT }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "REFTEXT", scope = REFType.class)
    public JAXBElement<REFType.REFTEXT> createREFTypeREFTEXT(REFType.REFTEXT value) {
        return new JAXBElement<REFType.REFTEXT>(_REFTypeREFTEXT_QNAME, REFType.REFTEXT.class, REFType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "NCON", scope = RECORDType.class)
    public JAXBElement<NCONType> createRECORDTypeNCON(NCONType value) {
        return new JAXBElement<NCONType>(_DIAGTypeNCON_QNAME, NCONType.class, RECORDType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CLAS", scope = RECORDType.class)
    public JAXBElement<String> createRECORDTypeCLAS(String value) {
        return new JAXBElement<String>(_DIAGTypeCLAS_QNAME, String.class, RECORDType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "RCON", scope = RECORDType.class)
    public JAXBElement<RCONType> createRECORDTypeRCON(RCONType value) {
        return new JAXBElement<RCONType>(_DIAGTypeRCON_QNAME, RCONType.class, RECORDType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CHECK", scope = RECORDType.class)
    public JAXBElement<String> createRECORDTypeCHECK(String value) {
        return new JAXBElement<String>(_DIAGTypeCHECK_QNAME, String.class, RECORDType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LINKType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LINK", scope = RECORDType.class)
    public JAXBElement<LINKType> createRECORDTypeLINK(LINKType value) {
        return new JAXBElement<LINKType>(_DIAGTypeLINK_QNAME, LINKType.class, RECORDType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LANGType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LANG", scope = RECORDType.class)
    public JAXBElement<LANGType> createRECORDTypeLANG(LANGType value) {
        return new JAXBElement<LANGType>(_DIAGTypeLANG_QNAME, LANGType.class, RECORDType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ECONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ECON", scope = RECORDType.class)
    public JAXBElement<ECONType> createRECORDTypeECON(ECONType value) {
        return new JAXBElement<ECONType>(_DIAGTypeECON_QNAME, ECONType.class, RECORDType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SUBJ", scope = RECORDType.class)
    public JAXBElement<String> createRECORDTypeSUBJ(String value) {
        return new JAXBElement<String>(_DIAGTypeSUBJ_QNAME, String.class, RECORDType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CRDAT", scope = RECORDType.class)
    public JAXBElement<String> createRECORDTypeCRDAT(String value) {
        return new JAXBElement<String>(_DIAGTypeCRDAT_QNAME, String.class, RECORDType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BCON", scope = RECORDType.class)
    public JAXBElement<BCONType> createRECORDTypeBCON(BCONType value) {
        return new JAXBElement<BCONType>(_DIAGTypeBCON_QNAME, BCONType.class, RECORDType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Byte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HOGR", scope = LINKType.class)
    public JAXBElement<Byte> createLINKTypeHOGR(Byte value) {
        return new JAXBElement<Byte>(_NOTETypeSOURFHOGR_QNAME, Byte.class, LINKType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Byte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HOGR", scope = DEFType.SOURF.class)
    public JAXBElement<Byte> createDEFTypeSOURFHOGR(Byte value) {
        return new JAXBElement<Byte>(_NOTETypeSOURFHOGR_QNAME, Byte.class, DEFType.SOURF.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EQUIType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "EQUI", scope = SYType.class)
    public JAXBElement<EQUIType> createSYTypeEQUI(EQUIType value) {
        return new JAXBElement<EQUIType>(_DTEBTypeEQUI_QNAME, EQUIType.class, SYType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ADD", scope = SYType.class)
    public JAXBElement<String> createSYTypeADD(String value) {
        return new JAXBElement<String>(_DTEBTypeADD_QNAME, String.class, SYType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Byte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HOGR", scope = SYType.class)
    public JAXBElement<Byte> createSYTypeHOGR(Byte value) {
        return new JAXBElement<Byte>(_NOTETypeSOURFHOGR_QNAME, Byte.class, SYType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SCOPE", scope = SYType.class)
    public JAXBElement<String> createSYTypeSCOPE(String value) {
        return new JAXBElement<String>(_DTEBTypeSCOPE_QNAME, String.class, SYType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "GEOG", scope = SYType.class)
    public JAXBElement<String> createSYTypeGEOG(String value) {
        return new JAXBElement<String>(_DTEBTypeGEOG_QNAME, String.class, SYType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SYType.TERM }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TERM", scope = SYType.class)
    public JAXBElement<SYType.TERM> createSYTypeTERM(SYType.TERM value) {
        return new JAXBElement<SYType.TERM>(_DTEBTypeTERM_QNAME, SYType.TERM.class, SYType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SOURF", scope = SYType.class)
    public JAXBElement<String> createSYTypeSOURF(String value) {
        return new JAXBElement<String>(_NOTETypeSOURF_QNAME, String.class, SYType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "NCON", scope = HEADType.class)
    public JAXBElement<NCONType> createHEADTypeNCON(NCONType value) {
        return new JAXBElement<NCONType>(_DIAGTypeNCON_QNAME, NCONType.class, HEADType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CLAS", scope = HEADType.class)
    public JAXBElement<String> createHEADTypeCLAS(String value) {
        return new JAXBElement<String>(_DIAGTypeCLAS_QNAME, String.class, HEADType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "RCON", scope = HEADType.class)
    public JAXBElement<RCONType> createHEADTypeRCON(RCONType value) {
        return new JAXBElement<RCONType>(_DIAGTypeRCON_QNAME, RCONType.class, HEADType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CHECK", scope = HEADType.class)
    public JAXBElement<String> createHEADTypeCHECK(String value) {
        return new JAXBElement<String>(_DIAGTypeCHECK_QNAME, String.class, HEADType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LINKType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LINK", scope = HEADType.class)
    public JAXBElement<LINKType> createHEADTypeLINK(LINKType value) {
        return new JAXBElement<LINKType>(_DIAGTypeLINK_QNAME, LINKType.class, HEADType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LANGType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LANG", scope = HEADType.class)
    public JAXBElement<LANGType> createHEADTypeLANG(LANGType value) {
        return new JAXBElement<LANGType>(_DIAGTypeLANG_QNAME, LANGType.class, HEADType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ECONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ECON", scope = HEADType.class)
    public JAXBElement<ECONType> createHEADTypeECON(ECONType value) {
        return new JAXBElement<ECONType>(_DIAGTypeECON_QNAME, ECONType.class, HEADType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SUBJ", scope = HEADType.class)
    public JAXBElement<String> createHEADTypeSUBJ(String value) {
        return new JAXBElement<String>(_DIAGTypeSUBJ_QNAME, String.class, HEADType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CRDAT", scope = HEADType.class)
    public JAXBElement<String> createHEADTypeCRDAT(String value) {
        return new JAXBElement<String>(_DIAGTypeCRDAT_QNAME, String.class, HEADType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BCON", scope = HEADType.class)
    public JAXBElement<BCONType> createHEADTypeBCON(BCONType value) {
        return new JAXBElement<BCONType>(_DIAGTypeBCON_QNAME, BCONType.class, HEADType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Byte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HOGR", scope = NOTEType.HOGR.class)
    public JAXBElement<Byte> createNOTETypeHOGRHOGR(Byte value) {
        return new JAXBElement<Byte>(_NOTETypeSOURFHOGR_QNAME, Byte.class, NOTEType.HOGR.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GRAMType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "GRAM", scope = TEType.TERM.class)
    public JAXBElement<GRAMType> createTETypeTERMGRAM(GRAMType value) {
        return new JAXBElement<GRAMType>(_SYTypeTERMGRAM_QNAME, GRAMType.class, TEType.TERM.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LINKType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LINK", scope = SCOPEType.class)
    public JAXBElement<LINKType> createSCOPETypeLINK(LINKType value) {
        return new JAXBElement<LINKType>(_DIAGTypeLINK_QNAME, LINKType.class, SCOPEType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GRAMType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "GRAM", scope = DTEAType.TERM.class)
    public JAXBElement<GRAMType> createDTEATypeTERMGRAM(GRAMType value) {
        return new JAXBElement<GRAMType>(_SYTypeTERMGRAM_QNAME, GRAMType.class, DTEAType.TERM.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "B", scope = REFType.REFTEXT.class)
    public JAXBElement<String> createREFTypeREFTEXTB(String value) {
        return new JAXBElement<String>(_REFTEXTTypeB_QNAME, String.class, REFType.REFTEXT.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Byte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HOGR", scope = RCONType.class)
    public JAXBElement<Byte> createRCONTypeHOGR(Byte value) {
        return new JAXBElement<Byte>(_NOTETypeSOURFHOGR_QNAME, Byte.class, RCONType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "REFNAME", scope = REFERENCESType.REFHEAD.class)
    public JAXBElement<String> createREFERENCESTypeREFHEADREFNAME(String value) {
        return new JAXBElement<String>(_REFTypeREFNAME_QNAME, String.class, REFERENCESType.REFHEAD.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "REFLINK", scope = REFERENCESType.REFHEAD.class)
    public JAXBElement<String> createREFERENCESTypeREFHEADREFLINK(String value) {
        return new JAXBElement<String>(_REFTypeREFLINK_QNAME, String.class, REFERENCESType.REFHEAD.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link REFERENCESType.REFHEAD.REFTEXT }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "REFTEXT", scope = REFERENCESType.REFHEAD.class)
    public JAXBElement<REFERENCESType.REFHEAD.REFTEXT> createREFERENCESTypeREFHEADREFTEXT(REFERENCESType.REFHEAD.REFTEXT value) {
        return new JAXBElement<REFERENCESType.REFHEAD.REFTEXT>(_REFTypeREFTEXT_QNAME, REFERENCESType.REFHEAD.REFTEXT.class, REFERENCESType.REFHEAD.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LINKType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LINK", scope = DTEBType.SCOPE.class)
    public JAXBElement<LINKType> createDTEBTypeSCOPELINK(LINKType value) {
        return new JAXBElement<LINKType>(_DIAGTypeLINK_QNAME, LINKType.class, DTEBType.SCOPE.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Byte }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HOGR", scope = NCONType.class)
    public JAXBElement<Byte> createNCONTypeHOGR(Byte value) {
        return new JAXBElement<Byte>(_NOTETypeSOURFHOGR_QNAME, Byte.class, NCONType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LINKType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LINK", scope = TEType.SCOPE.class)
    public JAXBElement<LINKType> createTETypeSCOPELINK(LINKType value) {
        return new JAXBElement<LINKType>(_DIAGTypeLINK_QNAME, LINKType.class, TEType.SCOPE.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GRAMType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "GRAM", scope = TERMType.class)
    public JAXBElement<GRAMType> createTERMTypeGRAM(GRAMType value) {
        return new JAXBElement<GRAMType>(_SYTypeTERMGRAM_QNAME, GRAMType.class, TERMType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "B", scope = REFERENCESType.REFHEAD.REFTEXT.class)
    public JAXBElement<String> createREFERENCESTypeREFHEADREFTEXTB(String value) {
        return new JAXBElement<String>(_REFTEXTTypeB_QNAME, String.class, REFERENCESType.REFHEAD.REFTEXT.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "NCON", scope = VOCABULARYType.P.class)
    public JAXBElement<NCONType> createVOCABULARYTypePNCON(NCONType value) {
        return new JAXBElement<NCONType>(_DIAGTypeNCON_QNAME, NCONType.class, VOCABULARYType.P.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CLAS", scope = VOCABULARYType.P.class)
    public JAXBElement<String> createVOCABULARYTypePCLAS(String value) {
        return new JAXBElement<String>(_DIAGTypeCLAS_QNAME, String.class, VOCABULARYType.P.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "RCON", scope = VOCABULARYType.P.class)
    public JAXBElement<RCONType> createVOCABULARYTypePRCON(RCONType value) {
        return new JAXBElement<RCONType>(_DIAGTypeRCON_QNAME, RCONType.class, VOCABULARYType.P.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CHECK", scope = VOCABULARYType.P.class)
    public JAXBElement<String> createVOCABULARYTypePCHECK(String value) {
        return new JAXBElement<String>(_DIAGTypeCHECK_QNAME, String.class, VOCABULARYType.P.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LINKType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LINK", scope = VOCABULARYType.P.class)
    public JAXBElement<LINKType> createVOCABULARYTypePLINK(LINKType value) {
        return new JAXBElement<LINKType>(_DIAGTypeLINK_QNAME, LINKType.class, VOCABULARYType.P.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LANGType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LANG", scope = VOCABULARYType.P.class)
    public JAXBElement<LANGType> createVOCABULARYTypePLANG(LANGType value) {
        return new JAXBElement<LANGType>(_DIAGTypeLANG_QNAME, LANGType.class, VOCABULARYType.P.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ECONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ECON", scope = VOCABULARYType.P.class)
    public JAXBElement<ECONType> createVOCABULARYTypePECON(ECONType value) {
        return new JAXBElement<ECONType>(_DIAGTypeECON_QNAME, ECONType.class, VOCABULARYType.P.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SUBJ", scope = VOCABULARYType.P.class)
    public JAXBElement<String> createVOCABULARYTypePSUBJ(String value) {
        return new JAXBElement<String>(_DIAGTypeSUBJ_QNAME, String.class, VOCABULARYType.P.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CRDAT", scope = VOCABULARYType.P.class)
    public JAXBElement<String> createVOCABULARYTypePCRDAT(String value) {
        return new JAXBElement<String>(_DIAGTypeCRDAT_QNAME, String.class, VOCABULARYType.P.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BCONType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BCON", scope = VOCABULARYType.P.class)
    public JAXBElement<BCONType> createVOCABULARYTypePBCON(BCONType value) {
        return new JAXBElement<BCONType>(_DIAGTypeBCON_QNAME, BCONType.class, VOCABULARYType.P.class, value);
    }

}
